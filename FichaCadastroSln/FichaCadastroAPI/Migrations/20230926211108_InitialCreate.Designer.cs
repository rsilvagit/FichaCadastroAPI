// <auto-generated />
using System;
using FichaCadastroAPI.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FichaCadastroAPI.Migrations
{
    [DbContext(typeof(FichaCadastroContextDB))]
    [Migration("20230926211108_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FichaCadastroAPI.Model.DetalheModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("FichaId")
                        .HasColumnType("int");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FichaId");

                    b.ToTable("Detalhe");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3328),
                            Feedback = "Bom trabalho!",
                            FichaId = 5,
                            Nota = 5,
                            Situacao = true
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3335),
                            Feedback = "Precisa melhorar",
                            FichaId = 2,
                            Nota = 3,
                            Situacao = false
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3339),
                            Feedback = "Bom trabalho!",
                            FichaId = 3,
                            Nota = 5,
                            Situacao = true
                        },
                        new
                        {
                            Id = 4,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3342),
                            Feedback = "Precisa melhorar",
                            FichaId = 2,
                            Nota = 3,
                            Situacao = false
                        },
                        new
                        {
                            Id = 5,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3347),
                            Feedback = "Bom trabalho!",
                            FichaId = 1,
                            Nota = 5,
                            Situacao = true
                        },
                        new
                        {
                            Id = 6,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3350),
                            Feedback = "Precisa melhorar",
                            FichaId = 3,
                            Nota = 3,
                            Situacao = false
                        },
                        new
                        {
                            Id = 7,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3353),
                            Feedback = "Bom trabalho!",
                            FichaId = 1,
                            Nota = 5,
                            Situacao = true
                        },
                        new
                        {
                            Id = 8,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3356),
                            Feedback = "Precisa melhorar",
                            FichaId = 4,
                            Nota = 3,
                            Situacao = false
                        });
                });

            modelBuilder.Entity("FichaCadastroAPI.Model.FichaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Ficha");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2682),
                            DataNascimento = new DateTime(1998, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2702),
                            Email = "joao@example.com",
                            Nome = "João"
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2718),
                            DataNascimento = new DateTime(1978, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2722),
                            Email = "maria@example.com",
                            Nome = "Maria"
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2729),
                            DataNascimento = new DateTime(1998, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2734),
                            Email = "joaquim@example.com",
                            Nome = "Joaquim"
                        },
                        new
                        {
                            Id = 4,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2740),
                            DataNascimento = new DateTime(1938, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2744),
                            Email = "mario@example.com",
                            Nome = "Mario"
                        },
                        new
                        {
                            Id = 5,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2751),
                            DataNascimento = new DateTime(2008, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2756),
                            Email = "junior@example.com",
                            Nome = "Junior"
                        },
                        new
                        {
                            Id = 6,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2762),
                            DataNascimento = new DateTime(1998, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(2767),
                            Email = "marina@example.com",
                            Nome = "Marina"
                        });
                });

            modelBuilder.Entity("FichaCadastroAPI.Model.TelephoneModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ative")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Ddd")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("FichaId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("FichaId");

                    b.ToTable("Telefone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ative = true,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3408),
                            Ddd = "123",
                            FichaId = 1,
                            Number = "555-1234"
                        },
                        new
                        {
                            Id = 2,
                            Ative = true,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3413),
                            Ddd = "456",
                            FichaId = 2,
                            Number = "555-5678"
                        },
                        new
                        {
                            Id = 3,
                            Ative = true,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3416),
                            Ddd = "123",
                            FichaId = 5,
                            Number = "555-1234"
                        },
                        new
                        {
                            Id = 4,
                            Ative = true,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3419),
                            Ddd = "456",
                            FichaId = 4,
                            Number = "555-5578"
                        },
                        new
                        {
                            Id = 5,
                            Ative = true,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3422),
                            Ddd = "123",
                            FichaId = 1,
                            Number = "555-1234"
                        },
                        new
                        {
                            Id = 6,
                            Ative = true,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3425),
                            Ddd = "456",
                            FichaId = 3,
                            Number = "555-5678"
                        },
                        new
                        {
                            Id = 7,
                            Ative = true,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3427),
                            Ddd = "123",
                            FichaId = 1,
                            Number = "555-1004"
                        },
                        new
                        {
                            Id = 8,
                            Ative = true,
                            DataCadastro = new DateTime(2023, 9, 26, 18, 11, 8, 129, DateTimeKind.Local).AddTicks(3430),
                            Ddd = "456",
                            FichaId = 2,
                            Number = "555-5008"
                        });
                });

            modelBuilder.Entity("FichaCadastroAPI.Model.DetalheModel", b =>
                {
                    b.HasOne("FichaCadastroAPI.Model.FichaModel", "Ficha")
                        .WithMany("DetalheModels")
                        .HasForeignKey("FichaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ficha");
                });

            modelBuilder.Entity("FichaCadastroAPI.Model.TelephoneModel", b =>
                {
                    b.HasOne("FichaCadastroAPI.Model.FichaModel", "Ficha")
                        .WithMany("TelephoneModels")
                        .HasForeignKey("FichaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ficha");
                });

            modelBuilder.Entity("FichaCadastroAPI.Model.FichaModel", b =>
                {
                    b.Navigation("DetalheModels");

                    b.Navigation("TelephoneModels");
                });
#pragma warning restore 612, 618
        }
    }
}
